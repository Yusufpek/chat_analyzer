version: '3'

services:
  db:
    image: postgres:17
    container_name: ca_db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5446:5432"
    volumes:
      - ../pg_data:/var/lib/postgresql/data

  backend:
    build: ./backend
    container_name: ca_backend
    restart: unless-stopped
    user: root
    env_file:
      - .env
    ports:
      - "8808:8000"
    volumes:
      - ./backend/app:/app
    depends_on:
      - db
    command: >   
      bash -c "
        python manage.py makemigrations &&
        python manage.py migrate --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "

  frontend:
    image: node:22-bookworm
    working_dir: /app
    container_name: ca_frontend
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5174:5174"
    volumes:
      - ./frontend/app:/app
    command: |
      sh -c "npm install && npm run dev"

  rabbitmq:
    restart: always
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
    environment:
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"

  celery:
    build: ./backend
    container_name: ca_celery
    env_file:
      - .env
    user: "${UID}:${GID}"
    volumes:
      - ./backend/app/media:/app/media
    depends_on:
      - rabbitmq
    command: celery -A chat_analyzer worker -l info

  celery-beat:
    build: ./backend
    container_name: ca_celery_beat
    env_file:
      - .env
    user: "${UID}:${GID}"
    volumes:
      - ./backend/app/media:/app/media
    depends_on:
      - rabbitmq
    command:  celery -A chat_analyzer beat --loglevel=debug --scheduler django_celery_beat.schedulers:DatabaseScheduler